# Saved Searches for the Splunk App for Chef: Bistro.
#
# Source:: https://github.com/ampledata/bistro
# Author:: Greg Albrecht <mailto:gba@splunk.com>
# Copyright:: Copyright 2012 Splunk, Inc.
# License:: Apache License 2.0
#


[Failed Run Count]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json" | spath | search failed=true | stats count as failed_runs | rangemap field=failed_runs low=0-100 elevated=101-500

[Average Run Time Single]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json" | spath path=elapsed_time output=elapsed_time | stats avg(elapsed_time) as avg_time | rangemap field=avg_time

[Average Run Time]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
description = Average time to complete a Chef Client (or Solo) run.
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json" | spath path=elapsed_time output=elapsed_time | timechart avg(elapsed_time)

[Average Run Time by Host]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
description = Average time to complete a Chef Client (or Solo) run on a machine.
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json" | spath path=elapsed_time output=elapsed_time | timechart avg(elapsed_time) by host

[Successful vs. Failed Runs Over Time]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json" | spath | search failed=* | timechart count(failed) by failed

[Updated Resources Over Time by Resource]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json_chef-resources" | spath path={}.instance_vars output=resource | mvexpand resource | spath input=resource | strcat resource_name "[" name "]" fq_resource | timechart count by fq_resource

[Updated Resources Over Time]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json_chef-resources" | spath path={}.instance_vars output=resource | mvexpand resource | spath input=resource | strcat resource_name "[" name "]" fq_resource | timechart count(fq_resource)

[Top Updated Resources]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = source="chef-handler" sourcetype="json_chef-resources" | spath path={}.instance_vars output=resource | mvexpand resource | spath input=resource | strcat resource_name "[" name "]" fq_resource | top fq_resource
